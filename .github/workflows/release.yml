name: Release

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true

            - name: Install dependencies
              run: cargo build --release

            - name: Build project
              run: cargo build --release

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ matrix.os }}-binary
                  path: target/release/

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v2
              with:
                  name: ${{ matrix.os }}-binary
                  path: ./artifacts

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./artifacts
                  asset_name: ${{ matrix.os }}-binary
                  asset_content_type: application/octet-stream
